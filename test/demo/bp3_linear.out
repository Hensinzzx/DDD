Welcome to [1m SCAD3[m $Revision: 1.1 $ ---
 	[1mSymbolic Circuit Analysis with Determinant Decision Diagrams[m 
	Copyright (c) 1998, XiangDong (Sheldon) Tan 
	'h' for help
: source bp3_linear.sp
subckt: opamp
3 
4 
2 
change current ckt
subckt: subft
1 
12 
5 
begin cktcall -- 
8 
3 
2 
begin cktcall -- 
4 
5 
0 
begin cktcall -- 
6 
7 
0 
change current ckt
begin cktcall -- 
1 
4 
2 
begin cktcall -- 
2 
3 
4 
begin cktcall -- 
4 
5 
3 
begin cktcall -- 
3 
8 
5 
begin cktcall -- 
6 
8 
7 
0.030000
[0:00.0u 0:00.0s 2544k]
: ! 'run' is to perform the symbolic and numerical analysis.
: ! It first builds the MNA matrix and then derives the symbolic
: ! expressions required in terms of DDDs. Finally, it perferm
: ! the numerical evluation on the resulting symbolic expressions.
: ! The times used for DDD construation and numerical evluation
: ! are also printed out.
: ! We do twice as we have some problems with the first run.
: run
IMPLICIT NUMERICAL AC ANALYSIS ...

Building MNA for subckt: opamp
number of element is: 1


THE MNA BOOLEAN MATRIX 
(1) [  0   0   0   0 ]
(2) [  0   0   0   0 ]
(3) [  0   0   0   0 ]
(4) [  0   0   0   1 ]




THE INDEX MATRIX 
(1) [  0   0   0   0 ]
(2) [  0   0   0   0 ]
(3) [  0   0   0   0 ]
(4) [  0   0   0   1 ]


Init_label:0
STATISTIC INFO FOR THE DDD
#nodes (DDD): 1
#paths (DDD): 1
row(real, index)
---------------------
row(3,1)  (1,1)+rii+ri2;(1,3)-rii;
row(4,2)  (2,4)+g2;(2,2)+rld;
row(2,3)  (3,3)+rii+ri1;(3,1)-rii;
row(1,4)  (4,3)+g1;(4,1)-g1;(4,4)+c1+r1;
---------------------


end of build subckt: opamp

Building MNA for subckt: subft

Process subckt call xo1
Expand xo1(opamp) ...
rii_xo1 2 8
ri1_xo1 2 100
ri2_xo1 8 100
g1_xo1 101 100 2 8
c1_xo1 101 100
r1_xo1 101 100
g2_xo1 3 100 101 100
rld_xo1 3 100
build composite expression for (8,8)
NULL return!
build composite expression for (8,3)
NULL return!
build composite expression for (8,2)
NULL return!
build composite expression for (3,8)
BUILDING COFACTOR (4 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 0
#paths (DDD): 1
build composite expression for (3,3)
NULL return!
build composite expression for (3,2)
build composite expression for (2,8)
NULL return!
build composite expression for (2,3)
NULL return!
build composite expression for (2,2)
NULL return!

Process subckt call xo2
Expand xo2(opamp) ...
rii_xo2 0 4
ri1_xo2 0 200
ri2_xo2 4 200
g1_xo2 201 200 0 4
c1_xo2 201 200
r1_xo2 201 200
g2_xo2 5 200 201 200
rld_xo2 5 200
build composite expression for (4,4)
NULL return!
build composite expression for (4,5)
NULL return!
build composite expression for (5,4)
build composite expression for (5,5)
NULL return!

Process subckt call xo3
Expand xo3(opamp) ...
rii_xo3 0 6
ri1_xo3 0 300
ri2_xo3 6 300
g1_xo3 301 300 0 6
c1_xo3 301 300
r1_xo3 301 300
g2_xo3 7 300 301 300
rld_xo3 7 300
build composite expression for (6,6)
NULL return!
build composite expression for (6,7)
NULL return!
build composite expression for (7,6)
build composite expression for (7,7)
NULL return!
number of element is: 17


THE MNA BOOLEAN MATRIX 
(1) [  0   0   0   0   0   0   0   0   0 ]
(2) [  0   0   0   0   0   0   0   0   0 ]
(3) [  0   0   0   0   0   0   0   0   0 ]
(4) [  0   0   0   1   1   0   0   0   0 ]
(5) [  0   0   0   1   1   1   0   0   1 ]
(6) [  0   0   0   1   1   1   1   0   0 ]
(7) [  0   0   0   0   0   1   1   0   0 ]
(8) [  0   0   0   0   0   0   0   1   1 ]
(9) [  0   0   0   0   1   0   0   1   1 ]




THE INDEX MATRIX 
(1) [  0   0   0   0   0   0   0   0   0 ]
(2) [  0   0   0   0   0   0   0   0   0 ]
(3) [  0   0   0   0   0   0   0   0   0 ]
(4) [  0   0   0  10   8   0   0   0   0 ]
(5) [  0   0   0   9   7  13   0   0   5 ]
(6) [  0   0   0  12  11  14  16   0   0 ]
(7) [  0   0   0   0   0  15  17   0   0 ]
(8) [  0   0   0   0   0   0   0   4   2 ]
(9) [  0   0   0   0   6   0   0   3   1 ]


Init_label:0
STATISTIC INFO FOR THE DDD
#nodes (DDD): 19
#paths (DDD): 14
row(real, index)
---------------------
row(1,1)  (1,1)+r1;(1,4)-r1;
row(12,2)  (2,2)+r2;(2,5)-r2;
row(5,3)  (3,3)+r6+c6+r7+rld;(3,7)-r6-c6;(3,8)-r7;
row(2,4)  (4,4)+r1+r3+rii+ri1;(4,1)-r1;(4,5)-rii;
row(8,5)  (5,5)+r2+r4+r9+rii+ri2;(5,4)-rii;(5,2)-r2;(5,6)-r4;(5,9)-r9;
row(3,6)  (6,6)+r4+r5+rld;(6,4);(6,5)-r4;(6,7)-r5;
row(4,7)  (7,7)+r5+r6+c6+rii+ri2;(7,3)-r6-c6;(7,6)-r5;
row(6,8)  (8,8)+r7+c8+rii+ri2;(8,3)-r7;(8,9)-c8;
row(7,9)  (9,9)+c8+r9+rld;(9,5)-r9;(9,8)-c8;
---------------------


end of build subckt: subft

Process subckt call x1
Expand x1(subft) ...
r1_x1 1 402
r2_x1 4 408
r3_x1 402 400
r4_x1 408 403
r5_x1 403 404
r6_x1 404 2
c6_x1 404 2
r7_x1 2 406
c8_x1 406 407
r9_x1 407 408
build composite expression for (1,1)
BUILDING COFACTOR (4 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 14
#paths (DDD): 8
build composite expression for (1,4)
BUILDING COFACTOR (5 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
build composite expression for (1,2)
BUILDING COFACTOR (7 4) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 4) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (4,1)
BUILDING COFACTOR (4 5) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 11
#paths (DDD): 6
build composite expression for (4,4)
BUILDING COFACTOR (5 5) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
build composite expression for (4,2)
BUILDING COFACTOR (7 5) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 5) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (2,1)
BUILDING COFACTOR (4 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 12
#paths (DDD): 5
BUILDING COFACTOR (4 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 3
build composite expression for (2,4)
BUILDING COFACTOR (5 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
BUILDING COFACTOR (5 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (2,2)
BUILDING COFACTOR (7 7) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 16
#paths (DDD): 9
BUILDING COFACTOR (7 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 5
#paths (DDD): 1
BUILDING COFACTOR (8 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 8) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 15
#paths (DDD): 8

Process subckt call x2
Expand x2(subft) ...
r1_x2 2 502
r2_x2 3 508
r3_x2 502 500
r4_x2 508 503
r5_x2 503 504
r6_x2 504 4
c6_x2 504 4
r7_x2 4 506
c8_x2 506 507
r9_x2 507 508
build composite expression for (2,2)
BUILDING COFACTOR (4 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 14
#paths (DDD): 8
more than one clist!!
build composite expression for (2,3)
BUILDING COFACTOR (5 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
build composite expression for (2,4)
BUILDING COFACTOR (7 4) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 4) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
more than one clist!!
build composite expression for (3,2)
BUILDING COFACTOR (4 5) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 11
#paths (DDD): 6
build composite expression for (3,3)
BUILDING COFACTOR (5 5) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
build composite expression for (3,4)
BUILDING COFACTOR (7 5) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 5) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (4,2)
BUILDING COFACTOR (4 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 12
#paths (DDD): 5
BUILDING COFACTOR (4 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 3
more than one clist!!
build composite expression for (4,3)
BUILDING COFACTOR (5 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
BUILDING COFACTOR (5 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (4,4)
BUILDING COFACTOR (7 7) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 16
#paths (DDD): 9
BUILDING COFACTOR (7 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 5
#paths (DDD): 1
BUILDING COFACTOR (8 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 8) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 15
#paths (DDD): 8
more than one clist!!

Process subckt call x3
Expand x3(subft) ...
r1_x3 4 602
r2_x3 5 608
r3_x3 602 600
r4_x3 608 603
r5_x3 603 604
r6_x3 604 3
c6_x3 604 3
r7_x3 3 606
c8_x3 606 607
r9_x3 607 608
build composite expression for (4,4)
BUILDING COFACTOR (4 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 14
#paths (DDD): 8
more than one clist!!
build composite expression for (4,5)
BUILDING COFACTOR (5 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
build composite expression for (4,3)
BUILDING COFACTOR (7 4) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 4) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
more than one clist!!
build composite expression for (5,4)
BUILDING COFACTOR (4 5) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 11
#paths (DDD): 6
build composite expression for (5,5)
BUILDING COFACTOR (5 5) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
build composite expression for (5,3)
BUILDING COFACTOR (7 5) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 5) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (3,4)
BUILDING COFACTOR (4 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 12
#paths (DDD): 5
BUILDING COFACTOR (4 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 3
more than one clist!!
build composite expression for (3,5)
BUILDING COFACTOR (5 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
BUILDING COFACTOR (5 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (3,3)
BUILDING COFACTOR (7 7) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 16
#paths (DDD): 9
BUILDING COFACTOR (7 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 5
#paths (DDD): 1
BUILDING COFACTOR (8 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 8) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 15
#paths (DDD): 8
more than one clist!!

Process subckt call x4
Expand x4(subft) ...
r1_x4 3 702
r2_x4 8 708
r3_x4 702 700
r4_x4 708 703
r5_x4 703 704
r6_x4 704 5
c6_x4 704 5
r7_x4 5 706
c8_x4 706 707
r9_x4 707 708
build composite expression for (3,3)
BUILDING COFACTOR (4 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 14
#paths (DDD): 8
more than one clist!!
build composite expression for (3,8)
BUILDING COFACTOR (5 4) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
build composite expression for (3,5)
BUILDING COFACTOR (7 4) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 4) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
more than one clist!!
build composite expression for (8,3)
BUILDING COFACTOR (4 5) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 11
#paths (DDD): 6
build composite expression for (8,8)
BUILDING COFACTOR (5 5) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
build composite expression for (8,5)
BUILDING COFACTOR (7 5) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 5) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (5,3)
BUILDING COFACTOR (4 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 12
#paths (DDD): 5
BUILDING COFACTOR (4 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 3
more than one clist!!
build composite expression for (5,8)
BUILDING COFACTOR (5 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 9
#paths (DDD): 4
BUILDING COFACTOR (5 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
build composite expression for (5,5)
BUILDING COFACTOR (7 7) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 16
#paths (DDD): 9
BUILDING COFACTOR (7 8) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 5
#paths (DDD): 1
BUILDING COFACTOR (8 7) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 7
#paths (DDD): 2
BUILDING COFACTOR (8 8) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 15
#paths (DDD): 8
more than one clist!!

Process subckt call x5
Expand x5(opamp) ...
rii_x5 7 6
ri1_x5 7 800
ri2_x5 6 800
g1_x5 801 800 7 6
c1_x5 801 800
r1_x5 801 800
g2_x5 8 800 801 800
rld_x5 8 800
build composite expression for (6,6)
NULL return!
build composite expression for (6,8)
NULL return!
build composite expression for (6,7)
NULL return!
build composite expression for (8,6)
build composite expression for (8,8)
NULL return!
build composite expression for (8,7)
build composite expression for (7,6)
NULL return!
build composite expression for (7,8)
NULL return!
build composite expression for (7,7)
NULL return!
number of element is: 33


THE MNA BOOLEAN MATRIX 
(1) [  1   1   1   0   0   0   0   0 ]
(2) [  1   1   1   1   1   0   0   0 ]
(3) [  1   1   1   1   0   0   0   0 ]
(4) [  0   1   1   1   1   1   0   0 ]
(5) [  0   1   0   1   1   1   1   0 ]
(6) [  0   0   0   1   1   1   1   1 ]
(7) [  0   0   0   0   1   0   1   1 ]
(8) [  0   0   0   0   0   1   1   1 ]




THE INDEX MATRIX 
(1) [ 33  29  30   0   0   0   0   0 ]
(2) [ 31  23  27  20  19   0   0   0 ]
(3) [ 32  25  28  24   0   0   0   0 ]
(4) [  0  22  26  18  15  14   0   0 ]
(5) [  0  21   0  17  13  10   9   0 ]
(6) [  0   0   0  16  11   8   6   5 ]
(7) [  0   0   0   0  12   0   4   2 ]
(8) [  0   0   0   0   0   7   3   1 ]


Init_label:0
STATISTIC INFO FOR THE DDD
#nodes (DDD): 71
#paths (DDD): 314
row(real, index)
---------------------
row(1,1)  (1,1)+r1;(1,2);(1,3);
row(4,2)  (2,1);(2,2)+r2+r6+c6+r7+rld+r1;(2,3);(2,4);(2,5);
row(2,3)  (3,1);(3,2);(3,3)+r6+c6+r7+rld+r1;(3,4);
row(3,4)  (4,3);(4,2);(4,4)+r2+r6+c6+r7+rld+r1;(4,5);(4,6);
row(5,5)  (5,5)+r37+r2+r6+c6+r7+rld;(5,4);(5,2);(5,6);(5,7)-r37;
row(8,6)  (6,6)+r40+r2+rld;(6,5);(6,4);(6,7);(6,8)-r40;
row(7,7)  (7,7)+r37+r39+rii+ri1;(7,5)-r37;(7,8)-rii;
row(6,8)  (8,8)+r38+r40+rii+ri2;(8,7)-rii;(8,6)-r40;
---------------------

DDD construction time: 0.04
BUILDING SYMBOLIC EXPRESSIONS ...
BUILDING COFACTOR (1 6) ...
MATRIX EXPANSION IS PERFORMED...
STATISTIC INFO FOR THE DDD
#nodes (DDD): 33
#paths (DDD): 50
BUILDING COFACTOR (1 1) ...
COFACTOR IS PRESENT.
STATISTIC INFO FOR THE DDD
#nodes (DDD): 59
#paths (DDD): 134
END OF BUILDING SYMBOLIC EXPRESSIONS
FREQUENCY SWEEPING ...
END OF FREQUENCY SWEEPING 
Evaluation time time: 0.1
END OF NUMERICAL AC ANALYSIS
0.140000
[0:00.2u 0:00.0s 2648k]
: run
IMPLICIT NUMERICAL AC ANALYSIS ...
DDD construction time: 0
FREQUENCY SWEEPING ...
END OF FREQUENCY SWEEPING 
Evaluation time time: 0.11
END OF NUMERICAL AC ANALYSIS
0.110000
[0:00.2u 0:00.0s 2648k]
: ! 'plot' uses xgraph to display the numerical evluation results.
: plot
0.020000
[0:00.0u 0:00.0s 2656k]
: ! 'status' displays some statisitic information. You can
: ! find the #DDD information here.
: stat
----------------------
Ckt: bp3_linear.sp
Title: * Testing Starzyk's example
#nodes: 18
#branch: 8
#stimula: 1
#output node: 1
----------------------
magnitude error(magerr): 0.1
phase error(phserr): 0.1
Rel_Threshold(relth): 0.9
Rel_Threshold(for num coeff)(nrelth): 0.01
Rel_Threshold(for den coeff)(drelth): 0.01
coeff suppress th(alpha): 0.01
---------------------
#(top level)total nodes (DDD): 80
#(top level)total paths (DDD): 0
#total nodes (DDD): 1
#total paths (DDD): 0
#total nodes (DDD): 92
#total paths (DDD): 0
#total overall nodes (DDD): 173
#total overall pathes (DDD): 0
---------------------
0.020000
[0:00.0u 0:00.0s 2656k]
: ! 'exit' quits from scad3
[0:00.4u 0:00.1s 2656k] SCAD3 done.
